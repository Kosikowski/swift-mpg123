name: CI

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write
  pull-requests: write

jobs:
  # macOS and Apple Platforms
  build-macos:
    runs-on: ${{ matrix.runner }}
    name: macOS (Swift ${{ matrix.swift-version }})
    strategy:
      matrix:
        include:
          - swift-version: 5.9
            runner: macos-14
          - swift-version: 6.1.2
            runner: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16'
      - name: Install Swift ${{ matrix.swift-version }}
        uses: SwiftyLab/setup-swift@v1
        with:
          swift-version: ${{ matrix.swift-version }}
      - name: Install mpg123
        run: |
          brew install mpg123
      - name: Show versions
        run: |
          xcodebuild -version
          swift --version
      - name: Clean build directory
        run: rm -rf .build
      - name: Build and Test
        run: |
          swift build -v
          swift test -v
      - name: Build Release
        run: swift build -c release -v
      - name: Run demo
        run: swift run MP3PlayerDemo --help || true

  # Linux
  build-linux:
    runs-on: ubuntu-latest
    name: Linux (Swift ${{ matrix.swift-version }})
    strategy:
      matrix:
        swift-version: [5.9, 6.1.2]
    steps:
      - uses: actions/checkout@v4
      - name: Install Swift
        uses: SwiftyLab/setup-swift@v1
        with:
          swift-version: ${{ matrix.swift-version }}
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libmpg123-dev pkg-config
      - name: Show Swift version
        run: swift --version
      - name: Build and Test
        run: |
          swift build -v
          swift test -v

  build-linux-release:
    runs-on: ubuntu-latest
    name: Linux Release (Swift ${{ matrix.swift-version }})
    strategy:
      matrix:
        swift-version: [5.9, 6.1.2]
    steps:
      - uses: actions/checkout@v4
      - name: Install Swift
        uses: SwiftyLab/setup-swift@v1
        with:
          swift-version: ${{ matrix.swift-version }}
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libmpg123-dev pkg-config
      - name: Show Swift version
        run: swift --version
      - name: Build and Test Release
        run: |
          swift build -c release -v
          swift test -c release -v

  # Windows
  build-windows:
    runs-on: windows-2022
    name: Windows (Swift ${{ matrix.swift-version }})
    strategy:
      matrix:
        swift-version: [5.9, 6.1.2]
    steps:
      - uses: actions/checkout@v4
      - name: Install Swift
        uses: SwiftyLab/setup-swift@v1
        with:
          swift-version: ${{ matrix.swift-version }}
      - name: Install mpg123 (Windows)
        run: |
          # Note: mpg123 installation on Windows may require manual setup
          # For now, we'll skip the demo on Windows as it requires mpg123
          echo "mpg123 installation on Windows requires manual setup"
        shell: pwsh
      - name: Verify Swift installation
        run: |
          swift --version
          swift build --help
        shell: pwsh
      - name: Build and Test
        run: |
          swift build -v
          swift test -v
        shell: pwsh

  build-windows-release:
    runs-on: windows-2022
    name: Windows Release (Swift ${{ matrix.swift-version }})
    strategy:
      matrix:
        swift-version: [5.9, 6.1.2]
    steps:
      - uses: actions/checkout@v4
      - name: Install Swift
        uses: SwiftyLab/setup-swift@v1
        with:
          swift-version: ${{ matrix.swift-version }}
      - name: Verify Swift installation
        run: |
          swift --version
          swift build --help
        shell: pwsh
      - name: Build and Test Release
        run: |
          swift build -c release -v
          swift test -c release -v
        shell: pwsh

  # Code Quality (macOS only)
  code-quality:
    name: Code Quality
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install SwiftFormat
      run: |
        brew install swiftformat
        
    - name: Check SwiftFormat
      run: swiftformat --lint --config .swiftformat Sources/ Tests/
      
    - name: Format code with SwiftFormat
      run: swiftformat --config .swiftformat Sources/ Tests/

  # Package Validation
  package-validation:
    name: Package Validation
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install mpg123
      run: |
        brew install mpg123
        
    - name: Setup Swift
      uses: SwiftyLab/setup-swift@v1
      with:
        swift-version: '5.9'
        
    - name: Check package description
      run: swift package describe
      
    - name: Generate Xcode project
      run: swift package generate-xcodeproj

  # Security and Dependencies
  security:
    name: Security Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  # Format Code (Manual trigger)
  format:
    name: Format Code
    runs-on: macos-latest
    if: github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install SwiftFormat
      run: |
        brew install swiftformat
        
    - name: Format code
      run: swiftformat --config .swiftformat Sources/ Tests/
      
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "style: format code with SwiftFormat"
        title: "style: format code with SwiftFormat"
        body: |
          This PR was automatically created by the CI workflow to format code with SwiftFormat.
          
          Changes:
          - Applied SwiftFormat rules to all Swift files
          - Maintained code style consistency
        branch: format-code
        delete-branch: true

  # Release job - only runs on tag pushes
  release:
    runs-on: macos-14
    name: Create Release
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build-macos, build-linux, build-linux-release, build-windows, build-windows-release]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.2'

      - name: Install Swift
        uses: SwiftyLab/setup-swift@v1
        with:
          swift-version: "5.9"

      - name: Install mpg123
        run: |
          brew install mpg123

      - name: Clean build directory
        run: rm -rf .build

      - name: Build Release
        run: swift build -c release

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            ## What's Changed

            This release includes:
            - SwiftMpg123 MP3 decoding library improvements
            - Cross-platform support (macOS, Linux, Windows)
            - Enhanced CI/CD pipeline with Swift 5.9 and 6.1.2 support

            ## Installation

            ```swift
            dependencies: [
                .package(url: "https://github.com/mateuszkosikowski/swift-mpg123.git", from: "${{ github.ref_name }}")
            ]
            ```

            ## Supported Platforms

            - macOS 12.0+
            - Linux
            - Windows

            ## Swift Version Support

            - Swift 5.9+
            - Swift 6.1.2+

            ## Features

            - MP3 file decoding and playback
            - Audio format detection and configuration
            - Metadata extraction (ID3v1/ID3v2 tags)
            - Seeking and positioning in audio streams
            - Streaming audio data processing
            - Equalizer support
            - Volume control
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 