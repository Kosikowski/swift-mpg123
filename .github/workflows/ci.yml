name: CI

on:
  push:
    branches: [ main ]
    tags: [ "v*" ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  pull-requests: write
  security-events: write

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Swift
      uses: swift-actions/setup-swift@v1
      with:
        swift-version: '5.9'
    - name: Build
      run: swift build -v
    - name: Run tests
      run: swift test -v

  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Swift
      uses: swift-actions/setup-swift@v1
      with:
        swift-version: '5.9'
    - name: Build
      run: swift build -v
    - name: Run tests
      run: swift test -v
    - name: Run demo
      run: swift run MP3PlayerDemo

  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Swift
      uses: swift-actions/setup-swift@v1
      with:
        swift-version: '5.9'
    - name: Build
      run: swift build -v
    - name: Run tests
      run: swift test -v

  # Code Quality (macOS only)
  code-quality:
    name: Code Quality
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install SwiftFormat
      run: |
        brew install swiftformat
        
    - name: Check SwiftFormat
      run: swiftformat --lint --config .swiftformat Sources/ Tests/
      
    - name: Format code with SwiftFormat
      run: swiftformat --config .swiftformat Sources/ Tests/
      
  # Package Validation
  package-validation:
    name: Package Validation
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Swift
      uses: swift-actions/setup-swift@v1
      with:
        swift-version: '5.9'
        
    - name: Check package description
      run: swift package describe

  # Release job - only runs on tag pushes
  release:
    name: Create Release
    runs-on: macos-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build-macos, build-ubuntu, build-windows, code-quality, package-validation]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          ## What's Changed
          
          This release includes:
          - MP3 decoding capabilities via embedded mpg123
          - Swift wrapper for mpg123 C library
          - Cross-platform support (macOS, Linux, Windows)
          - Demo CLI application for MP3 playback
          
          ## Installation
          
          ```swift
          .package(url: "https://github.com/your-username/swift-mpg123.git", from: "${{ github.ref_name }}")
          ```
          
          ## Usage
          
          ```swift
          import SwiftMpg123
          
          let decoder = MPG123()
          // ... use the decoder
          ```
        draft: false
        prerelease: false 